def main():
    print("""
    Всем привет от NStor!
    
    \033[96mЗдесь пример кода, с помощью которого можно шифровать PY-файлы и расшифровывать их на лету с помощью загрузчика.
    
    Технически — в нашем коде (используя getpass.getpass() или читая пароль из файла) длина пароля практически неограничена, ограничена только доступной памятью и реальными ограничениями ОС/оболочки. Алгоритмы (PBKDF2) примут любую длину входной строки — итоговый ключ всегда будет фиксированной длины (32 байта для AES-256).
    
    Данный пример только показывает алгоритм работы кодера/декодера AES-256 и представляет всего лишь "болванку", используя которую можно дописать свой код до требуемого вам уровня.
    
    Если вводишь пароль через getpass.getpass() (prompt) — ограничение практически только памятью; вводимые строки в терминале обычно поддерживают тысячи символов без проблем. Практически безопасно использовать несколько тысяч символов (например 4096+), но UX становится неудобным.
    
    Если читать пароль из файла (рекомендуемый способ) — ограничивает только размер файла и память. Можно хранить ключ-файл произвольной длины; для AES-256 нужен именно 32 байта фактического ключа, остальные данные можно использовать как пароль для PBKDF2 или как материал для KDF. PBKDF2 корректно работает с паролями любой длины; длинный пароль лишь немного увеличит время вычисления ключа.
    
    \033[91mРекомендации (практические):
    
    1. Лучше не передавать пароль через командную строку.
    Используй getpass() (ввод вручную) или — ещё лучше — файл-ключ key.bin размером ровно 32 байта (os.urandom(32)), с правами 600 (rw-------).
    
    2. Если всё же нужен текстовый пароль для человека:
    — 32–64 случайных символа — более чем достаточно и удобно.    
    — Для удобочитаемой, но сильной фразы используй Diceware: 8–10 слов.

    3. Если требуется конкретное числовое ограничение для планирования:
    — При вводе через getpass() спокойно используйте до 4096 символов; при необходимости — до 32 000 (кроссплатформенный безопасный верх при CLI — ≈32767).
    — Для автоматизированных сценариев используйте файл-ключ (32 байта).
    \033[39m""")


if __name__ == "__main__":
    main()
